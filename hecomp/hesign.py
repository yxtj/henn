# -*- coding: utf-8 -*-
# approximate sign function with composition of polynomials
# reference: https://arxiv.org/abs/2105.10879


def sign(x, alpha=7, quick=False):
    coefs = __ALPHA__[alpha]
    return p_a(x, coefs, quick)


# %% supporting functions

def p_a(x, coefs, oddOnly):
    for coef in coefs:
        if oddOnly:
            x = p_a_i_odd(x, coef)
        else:
            x = p_a_i_all(x, coef)
    return x

def p_a_i(x, coef, oddOnly):
    if oddOnly:
        return p_a_i_odd(x, coef)
    else:
        return p_a_i_all(x, coef)

def p_a_i_all(x, coef):
    n = len(coef)
    r = coef[n-1]
    for i in range(n-2, -1, -1):
        r = x * r + coef[i]
    return r
    
def p_a_i_odd(x, coef):
    try:
        x2 = x.square()
    except:
        x2 = x*x
    n = len(coef)
    r = coef[n-1] # it works because n is always even
    for i in range(n-3, 0, -2):
        r = x2 * r + coef[i]
    r *= x
    return r


# %% coefficients of each alpha (error <= range*2^-alpha)
# even coefficients are close to zero, and they can be ignored.

__A7__=[[3.60471572275560e-36, 7.30445164958251, -5.05471704202722e-35, -3.46825871108659e1,
 1.16564665409095e-34, 5.98596518298826e1, -6.54298492839531e-35, -3.18755225906466e1],
[-9.46491402344260e-49, 2.40085652217597, 6.41744632725342e-48, -2.63125454261783,
 -7.25338564676814e-48, 1.54912674773593, 2.06916466421812e-48, -3.31172956504304e-1]]

__A8__=[[-5.30489756589578e-48, 8.83133072022416, 2.15841891006552e-46, -4.64575039895512e1,
 -6.58937888826136e-46, 8.30282234720408e1, 4.43205802152239e-46, -4.49928477828070e1],
[-3.39457286447112e-32, 3.94881885083263, 8.77744308285903e-31, -1.29103010992282e1,
 -3.73356852706615e-30, 2.80865362174658e1, 5.59273808588447e-30, -3.55969148965137e1,
 -3.36963375307073e-30, 2.65159370881337e1, 5.36813679148778e-31, -1.14184889368449e1,
 1.91081017684427e-31, 2.62558443881334, -5.50686982942230e-32, -2.49172299998642e-1]]

__A9__=[[3.85169741234183e-44, 1.80966285718807e1, -4.59730416916377e-42, -4.34038703274886e2,
 7.96299160375690e-41, 4.15497103545696e3, -5.28977110396316e-40, -1.86846943613149e4,
 1.67219551148917e-39, 4.41657177889329e4, -2.69777424798506e-39, -5.65527928983401e4,
 2.14124591383569e-39, 3.71156122725781e4, -6.61722455927198e-40, -9.78241933892781e3],
[-1.04501074063854e-46, 3.79753323360856, 4.22842209818016e-45, -1.17718157771192e1,
 -2.25571113936639e-44, 2.49771086678346e1, 4.42462875106862e-44, -3.15238841603993e1,
 -4.13554194411645e-44, 2.37294863126722e1, 2.00060158783094e-44, -1.04331800195923e1,
 -4.86041132712796e-45, 2.46743976260838, 4.71256214052049e-46, -2.42130100247617e-1]]

__A10__=[[-1.68048812248597e-47, 1.08541842577442e1, 5.19213405604261e-46, -6.22833925211098e1,
 -1.67358715007438e-45, 1.14369227820443e2, 1.15437076692363e-45, -6.28023496973074e1],
[7.86253562483970e-39, 4.13976170985111, -7.18241741649940e-38, -5.84997640211679,
 5.17878634442782e-38, 2.94376255659280, -9.33059743960049e-39, -4.54530437460152e-1],
[3.75374153583292e-39, 3.29956739043733, -1.04537140020889e-37, -7.84227260291355,
 4.18647895984231e-37, 1.28907764115564e1, -6.09510159540855e-37, -1.24917112584486e1,
 4.05475441247124e-37, 6.94167991428074, -1.26770087815848e-37, -2.04298067399942,
 1.52452197400636e-38, 2.46407138926031e-1]]

__A11__=[[-7.57739739977406e-31, 1.12590667402954e1, 3.50298736439109e-29, -6.54692933329973e1,
 -1.10939529976921e-28, 1.20694634277757e2, 7.59102357594000e-29, -6.64019695377825e1],
[6.70745934852179e-49, 4.70477624210883, -3.56089594615542e-48, -6.79884851596681,
 1.43595646069924e-48, 3.31525104382873, -1.49853421385792e-49, -4.89362936859897e-1],
[-3.72466666381643e-46, 5.36334257654953, 4.38732568853777e-44, -3.55169555441962e1,
 -7.27558627095135e-43, 1.77807304115644e2, 4.67563353147443e-42, -5.92297395415024e2,
 -1.55919114948318e-41, 1.34891691889362e3, 3.10198751789898e-41, -2.15876445084938e3,
 -3.97952274644606e-41, 2.47365685586918e3, 3.44258367173957e-41, -2.04913542536248e3,
 -2.05447361791160e-41, 1.22739317090559e3, 8.49694447438626e-42, -5.25826175134002e2,
 -2.39856365003446e-42, 1.56930558712840e2, 4.42223468597695e-43, -3.09658595645912e1,
 -4.81331429819361e-44, 3.62894000814968, 2.35181370578811e-45, -1.91160283749939e-1]]

__A12__=[[3.28671253798158e-45, 1.15523042357223e1, -2.92342552286817e-43, -6.77794513440968e1,
 9.33659553243619e-43, 1.25283740404562e2, -6.41319512076187e-43, -6.90142908232934e1],
[6.41087388948633e-46, 9.65167636181626, -1.22822329506037e-43, -6.16939174538469e1,
 6.20624566340835e-43, 1.55170351652298e2, -9.96218491919333e-43, -1.82697582383214e2,
 7.27748968270610e-43, 1.12910726525406e2, -2.69134924845614e-43, -3.77752411770263e1,
 4.93235088742835e-44, 6.47503909732344, -3.56876826458906e-45, -4.45613365723361e-1],
[4.77710576312791e-47, 5.25888355571745, -2.94571921438375e-45, -3.37233593794284e1,
 4.43279401132879e-44, 1.64983085013457e2, -2.76863985519552e-43, -5.41408891406992e2,
 9.15181002994263e-43, 1.22296207997963e3, -1.82071128047940e-42, -1.95201910566479e3,
 2.34852758455781e-42, 2.24084021378300e3, -2.05169300503205e-42, -1.86634916983170e3,
 1.24157528220800e-42, 1.12722117843121e3, -5.22850779777304e-43, -4.88070474638380e2,
 1.50923249713814e-43, 1.47497846308920e2, -2.85763045364643e-44, -2.95171048879526e1,
 3.20768549654760e-45, 3.51269520930994, -1.62263985493395e-46, -1.88101836557879e-1]]

__A13__=[[1.34595769293910e-33, 2.45589415425004e1, 4.85095667238242e-32, -6.69660449716894e2,
 -2.44541235853840e-30, 6.67299848301339e3, 1.86874811944640e-29, -3.06036656163898e4,
 -5.76227817577242e-29, 7.31884032987787e4, 8.53680673009259e-29, -9.44433217050084e4,
 -6.02701474694667e-29, 6.23254094212546e4, 1.62342843661940e-29, -1.64946744117805e4],
[1.53261588585630e-47, 9.35625636035439, -3.68972123048249e-46, -5.91638963933626e1,
 1.74254399703303e-45, 1.48860930626448e2, -3.20672110002213e-45, -1.75812874878582e2,
 2.79115738948645e-45, 1.09111299685955e2, -1.22590309306100e-45, -3.66768839978755e1,
 2.62189142557962e-46, 6.31846290311294, -2.16662326421275e-47, -4.37113415082177e-1],
[6.43551938319983e-48, 5.07813569758861, 8.12601038855762e-46, -3.07329918137186e1,
 -1.60198474678427e-44, 1.44109746812809e2, 1.07463154460511e-43, -4.59661688826142e2,
 -3.63448723044512e-43, 1.02152064470459e3, 7.25207125369784e-43, -1.62056256708877e3,
 -9.27306397853655e-43, 1.86467646416570e3, 7.95843097354065e-43, -1.56749300877143e3,
 -4.69190103147527e-43, 9.60970309093422e2, 1.90863349654016e-43, -4.24326161871646e2,
 -5.27439678020696e-44, 1.31278509256003e2, 9.47044937974786e-45, -2.69812576626115e1,
 -9.98181561763750e-46, 3.30651387315565, 4.69390466192199e-47, -1.82742944627533e-1]]

__A14__=[[-3.38572283433492e-47, 2.49052143193754e1, 7.67064296707865e-45, -6.82383057582430e2,
 -1.33318527258859e-43, 6.80942845390599e3, 9.19464568002043e-43, -3.12507100017105e4,
 -3.02547883089949e-42, 7.47659388363757e4, 5.02426027571770e-42, -9.65046838475839e4,
 -4.05931240321443e-42, 6.36977923778246e4, 1.26671427827897e-42, -1.68602621347190e4],
[-9.27991756967991e-46, 1.68285511926011e1, 8.32408114686671e-44, -3.39811750495659e2,
 -1.27756566625811e-42, 2.79069998793847e3, 7.70152836729131e-42, -1.13514151573790e4,
 -2.41159918805990e-41, 2.66230010283745e4, 4.48807056213874e-41, -3.93840328661975e4,
 -5.34821622972202e-41, 3.87884230348060e4, 4.25722502798559e-41, -2.62395303844988e4,
 -2.31146624263347e-41, 1.23656207016532e4, 8.58571463533718e-42, -4.05336460089999e3,
 -2.14564940301255e-42, 9.06042880951087e2, 3.44803367899992e-43, -1.31687649208288e2,
 -3.21717059336602e-44, 1.12176079033623e1, 1.32425600403443e-45, -4.24938020467471e-1],
[6.72874968716530e-48, 5.31755497689391, 5.68199275801086e-46, -3.54371531531577e1,
 -1.35187813155454e-44, 1.84122441329140e2, 1.05531766289589e-43, -6.55386830146253e2,
 -4.14266518871760e-43, 1.63878335428060e3, 9.63097361166316e-43, -2.95386237048226e3,
 -1.44556688409360e-42, 3.90806423362418e3, 1.47265013864485e-42, -3.83496739165131e3,
 -1.04728251169615e-42, 2.79960654766517e3, 5.26108728786276e-43, -1.51286231886692e3,
 -1.86083902222546e-43, 5.96160139340009e2, 4.53644110199468e-44, -1.66321739302958e2,
 -7.25782287655313e-45, 3.10988369739884e1, 6.85800520634485e-46, -3.49349374506190,
 -2.89849811206637e-47, 1.78142156956495e-1]]


__ALPHA__={7:__A7__, 8:__A8__, 9:__A9__, 10:__A10__,
           11:__A11__, 12:__A12__, 13:__A13__, 14:__A14__}

# %% parse coefficients from the paper

def __converting__(text, format=False, ncol=3):
    res=[]
    tmp=[]
    for l in text.split('\n'):
        p=l.find('.')
        p=l.rfind(' ',0,p)
        if p != -1:
            if l.find(' ',0,p) != -1 and len(tmp) != 0:
                res.append(tmp)
                tmp=[]
            l=l[p+1:]
        l = l.replace(' ','').replace('−','-').replace('×10','e')
        tmp.append(l)
    if len(tmp) != 0:
        res.append(tmp)
    if not format:
        return res
    out = [ ', '.join(r) for r in res ]
    res = []
    for l in out:
        c = 0
        p = l.find(' ')
        while p != -1:
            c += 1
            if c % ncol == 0:
                l = l[:p] + '\n' + l[p+1:]
            p = l.find(' ',p+1)
        res.append(l)
    return res

